Understand the AST 
Purpose:
The AST is generated by the Go compiler during the parsing phase. It allows the compiler to analyze and manipulate the code programmatically.
- AST represents the structure of the Go code, and each type of statement (e,g, if, for, switch) is represetned by a specifc node type in the AST
Package:
- The go/ast package in the Go standard library provides tools for working with the AST. You can use this package to:
    - Parse Go code: Convert source code into an AST.
    - Traverse the AST: Visit each node in the tree to analyze or modify it.
    - Generate Go code: Create new Go code programmatically.
Traverse the Function's AST 
- use ast.Inspect to traverse the function's AST. This function takes a callback that is called for each node in the AST
